name: servers
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/projects/{project_id}/servers'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: list
      description: 'Get all servers in a project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":null,"project_id":null,"user_id":null,"provider_id":null,"name":"Consuelo Connelly","ssh_user":"vito","ip":"80.154.83.232","local_ip":"45.31.117.65","port":22,"os":"ubuntu_22","type":"regular","type_data":null,"provider":"custom","provider_data":null,"public_key":"test","status":"ready","auto_update":null,"available_updates":0,"security_updates":null,"progress":100,"progress_step":null,"updates":null,"last_update_check":null,"created_at":null,"updated_at":null},{"id":null,"project_id":null,"user_id":null,"provider_id":null,"name":"Rodolfo Fadel","ssh_user":"vito","ip":"103.227.79.93","local_ip":"33.49.217.56","port":22,"os":"ubuntu_22","type":"regular","type_data":null,"provider":"custom","provider_data":null,"public_key":"test","status":"ready","auto_update":null,"available_updates":0,"security_updates":null,"progress":100,"progress_step":null,"updates":null,"last_update_check":null,"created_at":null,"updated_at":null}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":25,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4kecVbv5Zaa3dE8D6fgP6h1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/projects/{project_id}/servers'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Create a new server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      provider:
        name: provider
        description: 'The server provider type'
        required: true
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_provider:
        name: server_provider
        description: 'If the provider is not custom, the ID of the server provider profile'
        required: true
        example: hetzner
        type: string
        enumValues:
          - custom
          - hetzner
          - digitalocean
          - linode
          - vultr
        exampleWasSpecified: false
        nullable: false
        custom: []
      region:
        name: region
        description: 'Provider region if the provider is not custom'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      plan:
        name: plan
        description: 'Provider plan if the provider is not custom'
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ip:
        name: ip
        description: 'SSH IP address if the provider is custom'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      port:
        name: port
        description: 'SSH Port if the provider is custom'
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the server.'
        required: true
        example: facere
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      os:
        name: os
        description: 'The os of the server'
        required: true
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      webserver:
        name: webserver
        description: 'Web server'
        required: true
        example: none
        type: string
        enumValues:
          - none
          - nginx
        exampleWasSpecified: false
        nullable: false
        custom: []
      database:
        name: database
        description: Database
        required: true
        example: none
        type: string
        enumValues:
          - none
          - mysql57
          - mysql80
          - mariadb103
          - mariadb104
          - mariadb103
          - postgresql12
          - postgresql13
          - postgresql14
          - postgresql15
          - postgresql16
        exampleWasSpecified: false
        nullable: false
        custom: []
      php:
        name: php
        description: 'PHP version'
        required: true
        example: '8.1'
        type: string
        enumValues:
          - '7.0'
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      provider: incidunt
      server_provider: hetzner
      region: ut
      plan: ullam
      ip: architecto
      port: praesentium
      name: facere
      os: illo
      webserver: none
      database: none
      php: '8.1'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"project_id":null,"user_id":null,"provider_id":null,"name":"Herbert VonRueden","ssh_user":"vito","ip":"91.154.105.143","local_ip":"62.75.177.7","port":22,"os":"ubuntu_22","type":"regular","type_data":null,"provider":"custom","provider_data":null,"public_key":"test","status":"ready","auto_update":null,"available_updates":0,"security_updates":null,"progress":100,"progress_step":null,"updates":null,"last_update_check":null,"created_at":null,"updated_at":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1d43hZc6VagPaEe5bDvf86k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/projects/{project_id}/servers/{id}'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: show
      description: 'Get a server by ID.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"project_id":null,"user_id":null,"provider_id":null,"name":"Connie Simonis","ssh_user":"vito","ip":"202.119.26.253","local_ip":"112.75.79.203","port":22,"os":"ubuntu_22","type":"regular","type_data":null,"provider":"custom","provider_data":null,"public_key":"test","status":"ready","auto_update":null,"available_updates":0,"security_updates":null,"progress":100,"progress_step":null,"updates":null,"last_update_check":null,"created_at":null,"updated_at":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6648eab1kafVPDh5vEcgd3Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/projects/{project_id}/servers/{server_id}/reboot'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: reboot
      description: 'Reboot a server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer heE6bdfa18v5Pa6kg4cZVD3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/projects/{project_id}/servers/{server_id}/upgrade'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: upgrade
      description: 'Upgrade server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4Ege66vbc1hka8DPaV5Zfd3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/projects/{project_id}/servers/{server_id}'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: delete
      description: 'Delete server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v3ceb6d6V1aDk584EhgfaZP'
    controller: null
    method: null
    route: null
    custom: []
