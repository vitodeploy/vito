name: databases
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/projects/{project_id}/servers/{server_id}/databases'
    metadata:
      groupName: databases
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: list
      description: 'Get all databases.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":null,"server_id":null,"name":"fkrajcik","status":"ready","created_at":null,"updated_at":null},{"id":null,"server_id":null,"name":"critchie","status":"ready","created_at":null,"updated_at":null}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":25,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aZvgeV364fd8b6a5EDchP1k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/projects/{project_id}/servers/{server_id}/databases'
    metadata:
      groupName: databases
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Create a new database.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: esse
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      charset:
        name: charset
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      collation:
        name: collation
        description: ''
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: esse
      charset: ut
      collation: labore
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"server_id":null,"name":"cory33","status":"ready","created_at":null,"updated_at":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fVvDPc64eaEk5bd36hgZ18a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/projects/{project_id}/servers/{server_id}/databases/{id}'
    metadata:
      groupName: databases
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: show
      description: 'Get a database by ID.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the database.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"server_id":null,"name":"walter.jacey","status":"ready","created_at":null,"updated_at":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bvcEZgDaPfd564V18ahek63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/projects/{project_id}/servers/{server_id}/databases/{database_id}'
    metadata:
      groupName: databases
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: delete
      description: 'Delete database.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      database_id:
        name: database_id
        description: 'The ID of the database.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
      database_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4a68DgeP6vcZbfVkh5a3d1E'
    controller: null
    method: null
    route: null
    custom: []
