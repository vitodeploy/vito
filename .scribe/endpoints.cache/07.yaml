## Autogenerated by Scribe. DO NOT MODIFY.

name: servers
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/projects/{project_id}/servers'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: list
      description: 'Get all servers in a project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":null,"project_id":null,"user_id":null,"provider_id":null,"name":"Marcelino Rodriguez","ssh_user":"vito","ip":"128.182.22.13","local_ip":"19.119.134.124","port":22,"os":"ubuntu_22","type":"regular","type_data":null,"provider":"custom","provider_data":null,"public_key":"test","status":"ready","auto_update":null,"available_updates":0,"security_updates":null,"progress":100,"progress_step":null,"updates":null,"last_update_check":null,"created_at":null,"updated_at":null},{"id":null,"project_id":null,"user_id":null,"provider_id":null,"name":"Everardo Conn","ssh_user":"vito","ip":"62.215.59.124","local_ip":"32.153.141.12","port":22,"os":"ubuntu_22","type":"regular","type_data":null,"provider":"custom","provider_data":null,"public_key":"test","status":"ready","auto_update":null,"available_updates":0,"security_updates":null,"progress":100,"progress_step":null,"updates":null,"last_update_check":null,"created_at":null,"updated_at":null}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":25,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8V6gP6cZk143he5EadfbDva'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/projects/{project_id}/servers'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Create a new server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      provider:
        name: provider
        description: 'The server provider type'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_provider:
        name: server_provider
        description: 'If the provider is not custom, the ID of the server provider profile'
        required: true
        example: hetzner
        type: string
        enumValues:
          - custom
          - hetzner
          - digitalocean
          - linode
          - vultr
        exampleWasSpecified: false
        nullable: false
        custom: []
      region:
        name: region
        description: 'Provider region if the provider is not custom'
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      plan:
        name: plan
        description: 'Provider plan if the provider is not custom'
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ip:
        name: ip
        description: 'SSH IP address if the provider is custom'
        required: true
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      port:
        name: port
        description: 'SSH Port if the provider is custom'
        required: true
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the server.'
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      os:
        name: os
        description: 'The os of the server'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      webserver:
        name: webserver
        description: 'Web server'
        required: true
        example: nginx
        type: string
        enumValues:
          - none
          - nginx
        exampleWasSpecified: false
        nullable: false
        custom: []
      database:
        name: database
        description: Database
        required: true
        example: postgresql13
        type: string
        enumValues:
          - none
          - mysql57
          - mysql80
          - mariadb103
          - mariadb104
          - mariadb103
          - postgresql12
          - postgresql13
          - postgresql14
          - postgresql15
          - postgresql16
        exampleWasSpecified: false
        nullable: false
        custom: []
      php:
        name: php
        description: 'PHP version'
        required: true
        example: '7.4'
        type: string
        enumValues:
          - '7.0'
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      provider: ut
      server_provider: hetzner
      region: consectetur
      plan: voluptatum
      ip: quisquam
      port: sapiente
      name: itaque
      os: aut
      webserver: nginx
      database: postgresql13
      php: '7.4'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"project_id":null,"user_id":null,"provider_id":null,"name":"Sidney Grant","ssh_user":"vito","ip":"22.232.10.97","local_ip":"107.107.187.150","port":22,"os":"ubuntu_22","type":"regular","type_data":null,"provider":"custom","provider_data":null,"public_key":"test","status":"ready","auto_update":null,"available_updates":0,"security_updates":null,"progress":100,"progress_step":null,"updates":null,"last_update_check":null,"created_at":null,"updated_at":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pg86vcedaD3V5EbZh4a61fk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/projects/{project_id}/servers/{id}'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: show
      description: 'Get a server by ID.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"project_id":null,"user_id":null,"provider_id":null,"name":"Maria Zemlak","ssh_user":"vito","ip":"4.166.233.247","local_ip":"92.197.44.184","port":22,"os":"ubuntu_22","type":"regular","type_data":null,"provider":"custom","provider_data":null,"public_key":"test","status":"ready","auto_update":null,"available_updates":0,"security_updates":null,"progress":100,"progress_step":null,"updates":null,"last_update_check":null,"created_at":null,"updated_at":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ka4ebad163EchfgV6v8ZP5D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/projects/{project_id}/servers/{server_id}/reboot'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: reboot
      description: 'Reboot a server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VP68EZbe351gf64avDdhkac'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/projects/{project_id}/servers/{server_id}/upgrade'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: upgrade
      description: 'Upgrade server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 64dDea1v3g6aVZc5b8fEkPh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/projects/{project_id}/servers/{server_id}'
    metadata:
      groupName: servers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: delete
      description: 'Delete server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer YOUR-API-KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      server_id:
        name: server_id
        description: 'The ID of the server.'
        required: true
        example: 29
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      server_id: 29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5Pg3vec6Zbh1f8VD6Ea4dak'
    controller: null
    method: null
    route: null
    custom: []
